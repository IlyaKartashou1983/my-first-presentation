{"version":3,"sources":["Greeting/Greeting.module.css","App/App.module.css","MySkills/Myskills.module.css","MyFriends/MyFriends.module.css","MyName/MyName.module.css","serviceWorker.js","Input/Input.jsx","Button/Button.jsx","Greeting/Greeting.jsx","MyName/MyName.jsx","MySkills/Myskill.jsx","MySkills/Myskills.jsx","MyFriends/MyFriend.jsx","MyFriends/MyFriends.jsx","App/App.jsx","index.jsx"],"names":["module","exports","Boolean","window","location","hostname","match","Input","render","className","s","input","ref","props","refNewName","type","placeholder","React","Component","Button","btn","onClick","Greeting","wrap","onAddClick","MyName","a","name","Myskill","myskill","Myskills","mySkills","skills","map","t","index","key","mySkill","MyFriend","MyFriends","myFriends","names","friends","myFriend","App","state","newNameRef","current","value","newNames","alert","setState","wrapper","container","createRef","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,IAAM,wB,gBCAtFD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,UAAY,yB,gBCA7DD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,QAAU,4B,gBCA9DD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,SAAW,8B,kBCAlED,EAAOC,QAAU,CAAC,KAAO,uB,uICWLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wECPSC,E,2MAPXC,OAAS,WACL,OACI,2BAAOC,UAAWC,IAAEC,MAAOC,IAAK,EAAKC,MAAMC,WAAYC,KAAK,OAAOC,YAAY,0G,6BAHvEC,IAAMC,WCSXC,E,2MAPXX,OAAS,WACL,OACI,4BAAQC,UAAWC,IAAEU,IAAKC,QAAS,EAAKR,MAAMQ,SAA9C,U,6BAHSJ,IAAMC,WCYZI,E,2MAVXd,OAAS,WACL,OACI,yBAAKC,UAAWC,IAAEa,MACd,kBAAC,EAAD,CAAOT,WAAY,EAAKD,MAAMC,aAC9B,kBAAC,EAAD,CAAQO,QAAS,EAAKR,MAAMW,e,6BALrBP,IAAMC,W,iBCSdO,E,2MATXjB,OAAS,WACL,OACI,yBAAKC,UAAWiB,IAAEC,MAAlB,8E,6BAHSV,IAAMC,WCQZU,E,2MATXpB,OAAS,WACL,OACI,6BACK,EAAKK,MAAMgB,U,6BAJNZ,IAAMC,W,gBCmBbY,E,2MAfXtB,OAAS,WACN,IAAIuB,EAAW,EAAKlB,MAAMmB,OAAOC,KAAI,SAACC,EAAGC,GAChC,OAAO,kBAAC,EAAD,CAASC,IAAKD,EAAON,QAASK,EAAEG,aAIhD,OACK,yBAAK5B,UAAWC,IAAEsB,QACd,yBAAKvB,UAAWC,IAAE2B,SAAlB,8GACCN,I,6BAVMd,IAAMC,WCOdoB,E,2MATX9B,OAAS,WACL,OACI,6BACK,EAAKK,MAAMc,O,6BAJLV,IAAMC,W,gBCmBdqB,E,2MAhBX/B,OAAS,WACL,IAAIgC,EAAY,EAAK3B,MAAM4B,MAAMR,KAAI,SAACC,EAAGC,GACjC,OAAO,kBAAC,EAAD,CAAUC,IAAKD,EAAOR,KAAMO,EAAEP,UAG7C,OACI,yBAAKlB,UAAWC,IAAEgC,SACd,yBAAKjC,UAAWC,IAAEiC,UAAlB,gGAGCH,I,6BAXOvB,IAAMC,WC2Cf0B,E,YAtCX,WAAY/B,GAAQ,IAAD,8BACf,4CAAMA,KAGVgC,MAAQ,CACJb,OAAQ,CACJ,CAACK,QAAS,wEACV,CAACA,QAAS,kEACV,CAACA,QAAS,2CAEdI,MAAO,CACH,CAACd,KAAM,MAXI,EAcnBH,WAAa,WACT,IAAIG,EAAO,EAAKmB,WAAWC,QAAQC,MAC/BC,EAAQ,sBAAO,EAAKJ,MAAMJ,OAAlB,CAAyB,CAACd,UACtCuB,MAAMvB,EAAO,gIACb,EAAKmB,WAAWC,QAAQC,MAAQ,GAChC,EAAKG,SAAS,CACVV,MAAOQ,KApBI,EAwBnBzC,OAAS,WACL,OACI,yBAAKC,UAAWC,IAAE0C,SACd,yBAAK3C,UAAWC,IAAE2C,WACd,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWZ,MAAO,EAAKI,MAAMJ,QAC7B,kBAAC,EAAD,CAAUT,OAAQ,EAAKa,MAAMb,SAC7B,kBAAC,EAAD,CAAUR,WAAY,EAAKA,WAAYV,WAAY,EAAKgC,gBA7BpE,EAAKA,WAAa7B,IAAMqC,YAFT,E,2BADLrC,IAAMC,WCDxBqC,IAAS/C,OAAO,kBAAC,EAAD,MAAQgD,SAASC,eAAe,SV4H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8fa3cd55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Greeting_wrap__31Z-W\",\"input\":\"Greeting_input__75wST\",\"btn\":\"Greeting_btn__UKsRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3lhK7\",\"container\":\"App_container__1_NvS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skills\":\"Myskills_skills__riSKC\",\"mySkill\":\"Myskills_mySkill__3ZSEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"MyFriends_friends__1gN36\",\"myFriend\":\"MyFriends_myFriend__yr7-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"MyName_name__3Dnlj\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport s from '../Greeting/Greeting.module.css';\n\nclass Input extends React.Component {\n    render = () => {\n        return (\n            <input className={s.input} ref={this.props.refNewName} type=\"text\" placeholder=\"Введи свое имя,брат!\"/>\n        );\n    }\n}\n\nexport default Input;\n\n\n\n","import React from 'react';\nimport s from '../Greeting/Greeting.module.css';\n\n\nclass Button extends React.Component {\n    render = () => {\n        return (\n            <button className={s.btn} onClick={this.props.onClick}>Hello</button>\n        );\n    }\n}\n\nexport default Button;\n\n\n\n","import React from 'react';\nimport s from './Greeting.module.css';\nimport Input from \"../Input/Input\";\nimport Button from \"../Button/Button\";\n\nclass Greeting extends React.Component {\n    render = () => {\n        return (\n            <div className={s.wrap}>\n                <Input refNewName={this.props.refNewName}/>\n                <Button onClick={this.props.onAddClick}/>\n            </div>\n        );\n    }\n}\n\nexport default Greeting;\n\n\n\n","import React from 'react';\nimport a from './MyName.module.css';\n\n\nclass MyName extends React.Component {\n    render = () => {\n        return (\n            <div className={a.name}>\n                Илья Карташов\n            </div>\n        );\n    }\n}\n\nexport default MyName;\n\n\n\n","import React from 'react';\r\n\r\nclass Myskill extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                {this.props.myskill}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Myskill;","import React from 'react';\nimport Myskill from \"./Myskill\";\nimport s from './Myskills.module.css';\n\n\nclass Myskills extends React.Component {\n    render = () => {\n       let mySkills = this.props.skills.map((t, index) => {\n                return <Myskill key={index} myskill={t.mySkill}/>\n            }\n        );\n\n       return (\n            <div className={s.skills}>\n                <div className={s.mySkill}>Мои лучшие качества :</div>\n                {mySkills}\n            </div>\n        );\n    }\n}\n\nexport default Myskills;\n\n\n\n","import React from 'react';\n\nclass MyFriend extends React.Component {\n    render = () => {\n        return (\n            <div>\n                {this.props.name}\n            </div>\n        );\n    }\n}\n\nexport default MyFriend;\n\n\n\n","import React from 'react';\nimport MyFriend from \"./MyFriend\";\nimport s from './MyFriends.module.css';\n\nclass MyFriends extends React.Component {\n    render = () => {\n        let myFriends = this.props.names.map((t, index) => {\n                return <MyFriend key={index} name={t.name}/>\n            }\n        );\n        return (\n            <div className={s.friends}>\n                <div className={s.myFriend}>\n                    Мои лучшие друзья\n                </div>\n                {myFriends}\n            </div>\n        );\n    }\n}\n\nexport default MyFriends;\n\n\n\n","import React from 'react';\nimport s from './App.module.css';\nimport Greeting from \"../Greeting/Greeting\";\nimport MyName from \"../MyName/MyName\";\nimport Myskills from \"../MySkills/Myskills\";\nimport MyFriends from \"../MyFriends/MyFriends\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.newNameRef = React.createRef();\n    }\n    state = {\n        skills: [\n            {mySkill: ' обаятельный '},\n            {mySkill: ' гениальный '},\n            {mySkill: ' добряк '}\n        ],\n        names: [\n            {name: ''}\n        ]\n    };\n    onAddClick = () => {\n        let name = this.newNameRef.current.value;\n        let newNames = [...this.state.names, {name}];\n        alert(name + \" ,ну как ты там поживаешь?)))\");\n        this.newNameRef.current.value = '';\n        this.setState({\n            names: newNames\n        })\n    };\n\n    render = () => {\n        return (\n            <div className={s.wrapper}>\n                <div className={s.container}>\n                    <MyName/>\n                    <MyFriends names={this.state.names}/>\n                    <Myskills skills={this.state.skills}/>\n                    <Greeting onAddClick={this.onAddClick} refNewName={this.newNameRef}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App/App\";\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}